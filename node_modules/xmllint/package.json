{
  "name": "xmllint",
  "version": "0.1.0",
  "description": "Online demo at http://syssgx.github.com/xml.js/",
  "main": "xmllint.js",
  "directories": {
    "test": "test"
  },
  "dependencies": {},
  "devDependencies": {
    "gulp": "~3.8.10",
    "brfs": "~1.3.0",
    "browserify": "~8.1.3",
    "browserify-shim": "~3.8.2"
  },
  "browserify-shim": {
    "xmllint": "global:xmllint"
  },
  "scripts": {
    "test": "./script/test"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/kripken/xml.js.git"
  },
  "author": {
    "name": "kripken"
  },
  "contributors": [
    {
      "name": "kripken"
    },
    {
      "name": "sterpe"
    }
  ],
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/kripken/xml.js/issues"
  },
  "gitHead": "95addcf845fa8393f3d3b1a0f747404a1a51ec2c",
  "readme": "\nOnline demo at http://syssgx.github.com/xml.js/\n\nThis package exports the `xmllint` object which is an Emscripten port of\nlibxml2's `xmllint` command for use in the browser or node.\n\n##### API #####\n\n```javascript\n\nObject xmllint.validateXML({\n\txml: \"String\",\n\tschema: \"String\" || [\"String\", \"String\", ...]\n});\n\n```\n\nThe return value Object has one property `errors` which is either null,\nin the case of no errors, or an Array of error strings....eg:\n\n```javascript\n\nif (!xmllint.validateXML(opts).errors) {\n\t//there were no errors.\n}\n\n```\n\nUsable with Browserify via `browserify-shim`.\n\n#### Building xmllint from source ####\n\nInstall emscripten.\n\n```\n\tgit clone\n\tgit submodule init\n\tgit submodule update\n\t./script/clean\n\t./script/libxml2\n\t./script/compile\n\t./script/test\n```\n\nThere are also equivalent `gulp` tasks.\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/kripken/xml.js#readme",
  "_id": "xmllint@0.1.0",
  "_shasum": "914791cc1c602d4b8f2ab8b1d09e79d9aa8887c9",
  "_from": "git+https://github.com/kripken/xml.js.git",
  "_resolved": "git+https://github.com/kripken/xml.js.git#95addcf845fa8393f3d3b1a0f747404a1a51ec2c"
}
